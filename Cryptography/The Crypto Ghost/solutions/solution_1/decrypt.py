
from Crypto.Util.number import long_to_bytes, bytes_to_long
from Crypto.PublicKey import RSA

# From public.pem file
e = 65537

# From public.pem file
n = 	
print("[+] Public Key: ", n)
print("[+] size: ", n.bit_length(), "bits")

#From the seed.txt. 
#As that is, base64 encoded
q = 273560417215500334242927473450977289098660657367726265901870473152020367529927822615492692103803245296608227436131427077345302347669996610089851682728800036535977878064912421926059236891863424248285293529595564935094786198628932510479710846859884992608179079457294588795015199983760606965838055054677335982981249023972841368638309408171427622721014112092031916605444195563874879140845063267704888701196884242590842470629698573894391946187530577007111717947223125736390767818476309330521649029073377300928148411595209562777963862082768780627648735743803076626550881008508917938212373635554418158262888937235243629108825205793396589683487926207789882941117486775746444801636109191787750045578057728133094734196188012532008883436648532464325125690281117725048757833105473430686288481011965004704378381023746860350888877576929730573497356020386427749091717546258133781682970794300585228605852389607310163193079480462418100249363814334415537202582212795103952036752280865637735840166535941830311032107472986482777603622117439261407667635507436864792813606528139545866460618387690964985851508087586619687482172189913806003024534683688283139461586915984777649854668333091199837490841348431348516321985683221760408464552133042255226761007439


p =  n // q
print(p)

primes_arr = [p, q]


# Calculate totient 'Phi(n)'
phi = 1
for k in primes_arr:
    phi *= (k - 1)

# Calculate private key 'd'
d = pow(e, -1, phi)

# Read the encrypted flag from the file
with open("flag_encrypted.txt", "rb") as flag_file:
    _enc = int.from_bytes(flag_file.read(), byteorder="little")

# Decrypt  Flag
dec_flag = pow(_enc, d, n)

# Convert the decrypted integer back to bytes
decrypted_text_bytes = dec_flag.to_bytes((dec_flag.bit_length() + 7) // 8, byteorder="big")

# Print the decrypted text
decrypted_text = decrypted_text_bytes.decode()
print("Decrypted:", decrypted_text)



